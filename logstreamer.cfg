s3BuckettoStream=myapplogsbabupe
mapperS3Location=s3://projectcodebabupe/mapper.py
reducerS3Location=s3://projectcodebabupe/reducetoDynamo.py
outputS3Bucket=myapplogsoutputbabupe
logS3Uri=s3://myemrlogsbabupe/
terminationProtect=True
masterInstanceType=m3.2xlarge
slaveInstanceType=m3.xlarge
amiVersion=3.3.1
vpcSubnetId=subnet-3354876a
numInstances=5
jobFlowRole=AppRole
serviceRole=EMR_DefaultRole
ec2KeyName=MyFirstKeyPair
sqsQueueName=getS3KeyLogs
ddbTableNameForStreamer=tbls3keylogstate
ddbTableNameForState=tblstreamjobstate
kinesisStreamName=logstreamer
calculatePartialAggregates=Y
keysPlusAggregate={('SWRevision','LogType'):':':'count'}
timeKey=eventTimestamp
timeDimensionInMinute=10
loadResultstoDynamoDB=Y
ddbTableNameForResult=tblswrevgrouping
jobflowName=logstreamerjob
sleepTimeinSecs=100
rsClusterId=babupeapp
nodeType=dw2.large
dbName=babupeappdb
dbPort=8193
masterUserName=babupe_dba
masterPassword=S&xz97ZLrmdd
vpcSecurityGroupIds=sg-2ee80c4a
clusterSubnetGroupName=babupeclusgrpname
numberOfNodes=3
encrypted=True
tableName=deviceinfo
stagingTableName=deviceinfo_staging
createTableNameStmt=create table if not exists deviceinfo(AppName varchar(100),DeviceInfo varchar(200),logType varchar(20),SWRevision varchar(20),eventTimestamp timestamp) sortkey(eventTimestamp,SWRevision);
createStagingTableNameStmt=create table if not exists deviceinfo_staging(AppName varchar(100),DeviceInfo varchar(200),logType varchar(20),SWRevision varchar(20),eventTimestamp varchar(100)) sortkey(eventTimestamp,SWRevision);
columnMapping=AppName:varchar,DeviceInfo:varchar,logType:varchar,SWRevision:varchar,eventTimestamp:timestamp
rsJobQueueName=rsjobqueue
S3ManifestBucket=myapplogsmanifestbabupe